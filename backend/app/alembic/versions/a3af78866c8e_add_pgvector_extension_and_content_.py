"""add_pgvector_extension_and_content_embedding_table

Revision ID: a3af78866c8e
Revises: 3192b5d9c6a2
Create Date: 2025-06-12 04:48:41.936853

"""
from typing import Sequence, Union
import sqlmodel.sql.sqltypes

from alembic import op
import sqlalchemy as sa
import pgvector.sqlalchemy


# revision identifiers, used by Alembic.
revision: str = 'a3af78866c8e'
down_revision: Union[str, None] = '3192b5d9c6a2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # Enable pgvector extension
    op.execute('CREATE EXTENSION IF NOT EXISTS vector')
    
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('content_embedding',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('url', sqlmodel.sql.sqltypes.AutoString(length=1024), nullable=False),
    sa.Column('content_hash', sqlmodel.sql.sqltypes.AutoString(length=64), nullable=False),
    sa.Column('content_preview', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('embedding', pgvector.sqlalchemy.vector.VECTOR(dim=384), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_content_embedding_content_hash'), 'content_embedding', ['content_hash'], unique=False)
    op.create_index(op.f('ix_content_embedding_url'), 'content_embedding', ['url'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_content_embedding_url'), table_name='content_embedding')
    op.drop_index(op.f('ix_content_embedding_content_hash'), table_name='content_embedding')
    op.drop_table('content_embedding')
    # ### end Alembic commands ###
    
    # Note: We don't drop the vector extension in downgrade to avoid affecting other tables
